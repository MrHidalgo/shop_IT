@import "../_mixin/mixin";
@import "../_function/function";

// SPRITE [&retina]
@import "../_variable/sprite_it";

// CONFIG VARIABLE
@import "../_config/input-config";



$w-all                          : return-value(dimension, all);

$c-whisperLight                 : return-value(color, whisperLight);
$c-grey                         : return-value(color, grey);
$c-white                        : return-value(color, white);
$c-show                         : return-value(color, show);
$c-nero                         : return-value(color, nero);
$c-deep_pink                    : return-value(color, deep_pink);
$c-pumpkin                      : return-value(color, pumpkin);
$c-zircon                       : return-value(color, zircon);

$fontSize-select								: 13px;
$fontFamily-select							: return-value(fonts, open-sans-regular);
$iconArrow-select								: $sp-i-select-arrow-group;
$top-select__icon								: 13px;
$right-select__icon							: 15px;
$paddingLeft-select__value			: 20px;

$fontSize__method-right         : 14px;
$fontFamily__method-right       : return-value(fonts, SSP-bold);
$borderColor__method-right      : return-value(color, powder-blue);

$fontSize__place-wrap__text     : 14px;
$fontFamily__place-wrap__text   : return-value(fonts, SSP-bold);

$borderColor                    : return-value(color, zircon);




.img-responsive {
	display: block;
	max-width: $w-all;
	height: auto;
}

.aligner {
	display: inline-block;  *display: inline;  *zoom: 1;
	height: 100%;
	margin-right: -.3em;
	vertical-align: middle;
}

select {
	position: absolute;
	top: 0;
	left: 0;
	border: 0;
	@include mixinDimensions($w-all);
	opacity: 0;
	filter: alpha(opacity=0);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
	font-size: initial;
	cursor: pointer;
	z-index: 100;
}

// input
input[type="radio"],
input[type="checkbox"] {
	position: absolute;
	@include mixinDimensions(0);
	opacity: 0;
	border: none;
	margin: 0;
	padding: 0;
	filter: alpha(opacity=0);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
	outline: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus
input:-webkit-autofill {
	-webkit-box-shadow: 0 0 0 1000px #fff inset;
	transition: background-color 5000s ease-in-out 0s;
}
// /-input


// input-select
.input-select {
	&__value {
		font: {
			size: $fontSize-select;
		}
	}


	&__icon {
		position: absolute;
		top: $top-select__icon;
		right: $right-select__icon;
		@include retina-sprite($iconArrow-select);
	}
}// /-input-select


// text @OR@
.divider-text {
	position: relative;
	height: 41px;
	line-height: 39px;
	text-align: center;


	.btn &{
		display: none;
		@include respond-to('small-all') {
			display: block;
			margin: 0 15px;
		}
	}


	&-input {
		margin-bottom: 15px;
		@include respond-to('small-all') {
			margin-bottom: 10px;
		}


		.divider-text__word {
			color: $c-nero;
			background-color: $c-white;
		}
	}


	&-empty {
		.divider-text__line {
			@include respond-to("small-all") {
				top: 0;
			}
		}
	}


	&-internal {
		max-width: 425px;
		margin: 15px auto;
	}


	&__line {
		position: absolute;
		left: 0;
		@include mixinDimensions($w-all, 1px);
		top: 20px;
		background-color: $c-zircon;
	}


	&__word {
		position: relative;
		z-index: 10;
		background-color: $c-white;
		padding: 0 15px;
		display: inline-block;  *display: inline;  *zoom: 1;
		font: {
			size: 14px;
		}
		color: $c-grey;
		@include respond-to('extra_small') {
			font: {
				size: 14px;
			}
		}
	}
}// /-.btn__text


.header-steps {
	padding-top: 10px;
	padding-bottom: 40px;
	@include respond-to("small-all") {
		padding-top: 0;
		padding-bottom: 0;
	}
}


.wrap_bg{
	background-color: $c-white;
}


.border_bottom {
	border-bottom: 1px solid $borderColor;
}


.border-radius {
	&_all {
		border-radius: 4px;
	}
	&_top {
		border-top-left-radius: 4px;
		border-top-right-radius: 4px;
	}
	&_bottom {
		border-bottom-left-radius: 4px;
		border-bottom-right-radius: 4px;
	}
}


.bonus-wrap {
	padding: 0 30px 30px;
	overflow: hidden;
	@include respond-to("small-all") {
		padding: 0 15px 20px;
	}
}


.method-wrap {
	position: relative;
	padding: 20px 30px;
	@include respond-to("small-all") {
		padding: 15px;
	}


	&__right {
		position: absolute;
		top: 20px;
		right: 0;
		font: {
			size: $fontSize__method-right;
		}
		padding: 15px 20px;
		border: 1px solid $borderColor__method-right;
		border-radius: 4px;
		@include respond-to("small-all") {
			position: static;
			margin-top: 20px;
			text-align: center;
		}



		.first {
			&__strong {
				font: {
					family: $fontFamily__method-right;
				}
			}
		}


		.second {
			&__text {
				&-internal {
					font: {
						family: $fontFamily__method-right;
					}
					color: $c-pumpkin;
				}
			}
		}
	}
}


.input-wrap {
	@include respond-to("small-all") {
		padding: 0 15px;
	}


	&_padding {
		padding: 0 30px;
		@include respond-to("small-all") {
			padding: 0 0;
		}
	}


	&__text {
		font : {
			size: 14px;
			weight: normal;
		}
		color: $c-nero;
		text-align: center;
		padding: 20px 0 40px;
	}


	&-internal {
		padding-bottom: 60px;
	}


	&-shipping {
		padding-top: 15px;



		.forms-row {
			min-height: 70px;
		}
	}


	&-internal,
	&-shipping {
		@include respond-to("extra_small") {
			padding: 0 15px;
		}
	}
}


.shipping-address {
	padding: 15px 30px;
	@include respond-to("extra_small") {
		padding-left: 15px;
		padding-right: 15px;
	}


	&__text {
		display: block;
		font-size: 14px;
		color: $c-nero;
	}
}


.payment {
	background-color: $c-show;


	.payment-wrap {
		max-width: 450px;
		margin: 0 auto;
		padding: 50px 0;
	}
}


.form__wrap {
	width: $PMW_width;
	padding: $PMW_paddingTop $PMW_paddingRight $PMW_paddingBottom $PMW_paddingLeft;
	margin: 0 auto;
	@include respond-to("extra_small") {
		width: $w-all;
		padding-top: 30px;
		padding-left: 15px;
		padding-right: 15px;
	}
}


.cart-row {
	@include respond-to("extra_small") {
		margin-bottom: 20px;
		text-align: center;
	}
}


.place-wrap {
	position: relative;
	padding: 25px;
	border-left: 1px solid $c-zircon;
	border-right: 1px solid $c-zircon;
	@include respond-to("small-all") {
		padding: 15px;
		text-align: center;
	}


	&__left {
		position: relative;
		padding-right: 320px;
		@include respond-to("medium") {
			padding-right: 300px;
		}
		@include respond-to("small-all") {
			width: $w-all;
			padding: 0 0 15px;
		}
	}


	&__right {
		position: absolute;
		top: 0;
		right: 0;
		@include mixinDimensions(320px, $w-all);
		@include respond-to("medium") {
			width: 300px;
		}
		@include respond-to("small-all") {
			position: static;
			width: $w-all;
		}
	}


	&__text {
		font: {
			size: $fontSize__place-wrap__text;
		}
	}


	&__btn {
		font-family: $fontFamily__place-wrap__text;
	}
}


.cart-wrap,
.total-wrap{
	border-left: 1px solid $c-zircon;
	border-right: 1px solid $c-zircon;
}


.border-radius_top {
	.right-col {
		.confirm-title {
			@include respond-to("small-all") {
				border-top: 1px solid $c-whisperLight;
			}
		}
	}
}