@import "../_mixin/mixin";
@import "../_function/function";

// SPRITE [&retina]
@import "../_variable/sprite_it";


$w-all            : return-value(dimension, all);

$c-text           : return-value(color, suva_gray);
$c-text_active    : return-value(color, nero);
$c-steps_bg       : return-value(color, zircon);
$c-check          : return-value(color, cadet-blue);
$c-active         : return-value(color, orange);

$i-result         : $sp-i-steps-result-group;

$position-block   : right;
$f-size           : 12px;
$steps-wrap       : 100px;



.steps {
	float: $position-block;
	clear: both;
	font : {
		size: $f-size;
	}
	@include respond-to('small') {
		float: none;
		text-align: center;
	}


	&__wrap {
		display: inline-block;  *display: inline;  *zoom: 1;
		vertical-align: top;
		position: relative;
		width: $steps-wrap;
		text-align: left;
		@include respond-to('small-all') {
			text-align: center;
			width: ($w-all / 5) - 1;
		}


		&_active {
			.steps__wrap-container {
				background: $c-active;
			}

			.steps__wrap-text {
				color: $c-text_active;
			}
		}


		&_check {
			.steps__wrap-container {
				background: $c-check;
			}

			.steps__wrap-text {
				color: $c-check;
			}
		}


		&-container {
			@include mixinDimensions($w-all, 3px);
			display: inline-block;  *display: inline;  *zoom: 1;
			position: relative;
			z-index: 3;
			background-color: $c-steps_bg;
			margin-bottom: 2px;
		}


		&-text,
		&-text_mobile {
			color: $c-text;
			line-height: 1.2;
			@include respond-to("small-all") {
				display: none;
			}


			&_mobile {
				display: none;
				@include respond-to("small-all") {
					display: block;
				}
			}
		}


		&_status {
			.steps__wrap-text {
				&-icon {
					display: inline-block;  *display: inline;  *zoom: 1;
					vertical-align: middle;
					@include retina-sprite($i-result);
				}
			}
		}
	}
}

